macro "nfprev" {
  nfprev();
}

function nfprev() {
  FS = '/';

  PROJECT_PATH = getDirectory("Choose a Directory");
  PROJECT_NAME = File.getName(PROJECT_PATH);

  POSITION_STRING = "[A-Z][0-9]+[a-z]?";
  POSITION_DIRS = getMatchingDirs(PROJECT_PATH,POSITION_STRING);
  path_to_stack_lists = PROJECT_PATH+PROJECT_NAME+"_stacks"+FS;
  if (!File.exists(path_to_stack_lists)) {
    File.makeDirectory(path_to_stack_lists);
  }

  path_to_skip_list = path_to_stack_lists+"skip.txt";

  WL = 0;
  Dialog.create("Choose a wavelength to display");
  Dialog.addNumber("WL",0);
  Dialog.show();

  WL = Dialog.getNumber();
  path_to_image_list = path_to_stack_lists+"WL"+WL+"_image_list.txt";

  npaths = 0;
  paths = newArray(POSITION_DIRS.length*1000);
  for (z=0;z<POSITION_DIRS.length;z++) {
    position_name = replace(POSITION_DIRS[z],FS,"");

    well     = substring(position_name,0,lengthOf(position_name)-1);
    position = substring(position_name,lengthOf(position_name)-1);

    position_path = PROJECT_PATH+POSITION_DIRS[z];

    wl_string = "WL[0-9]+";
    wl_dirs = getMatchingDirs(position_path,wl_string);

    for (j=0;j<wl_dirs.length;j++) {
      wl_name = replace(wl_dirs[j],FS,"");
      if ( endsWith(wl_name, WL) ) {
        wl_path = position_path+wl_dirs[j];
        images = getImages(wl_path);
        for (i=0;i<images.length;i++) {
          if (images[i] != -1) {
            paths[npaths++] = wl_path+images[i];
          }
        }
      }
    }
  }

  f = File.open(path_to_image_list);
  for (i=0; i<paths.length; i++) {
    if (paths[i] != 0) {
      print(f,paths[i]);
    }
  }
  File.close(f);
  run("Stack From List...", "open="+path_to_image_list+" use");

  if ( getBoolean("Select images to skip?") ) {
    skip = newArray(paths.length);
    sk = 0;
    for (i=0;i<nSlices;i++) {
      slice = i+1;
      Stack.setSlice(slice);
      if( !getBoolean("Keep image?") ) {
        skip[sk++] = paths[i];
      }
    }

    printa(skip);
    f = File.open(path_to_skip_list);
    for (i=0;i<skip.length;i++) {
      if (skip[i] != 0) print(f, skip[i]);
    }
    File.close(f);
  }
}

function getImages(path) {
  contents = getFileList(path);
  tifs = 0;
  temp_names = newArray(contents.length);
  for (i=0;i<contents.length;i++) {
    if ( matches(contents[i], '.*\.tif') ) {
      temp_names[i] = contents[i];
      tifs++;
    }
  }
  tif_names = newArray(tifs);
  n=0;
  for (i=0;i<temp_names.length;i++) {
    if ( matches(temp_names[i], '.*\.tif') ) {
      tif_names[n++] = temp_names[i];
    }
  }
  if (tifs == 0) return -1;
  return tif_names;
}

function getMatchingDirs(path,match) {
  contents = getFileList(path);
  n = 0;
  names = newArray(contents.length);
  for (i=0;i<contents.length;i++) {
    if ( matches(replace(contents[i],FS,""), match) ) {
      //print("Matched "+contents[i]);
      names[i] = contents[i];
      n++;
    }
  }

  if (n == 0) exit("Didn't find any matches to "+match+" in "+path);

  good_dirs = newArray(n);
  gdi = 0;
  for (i=0;i<names.length;i++) {
    if ( matches(replace(names[i],FS,""), match) ) {
      //print("Copying "+ names[i]);
      good_dirs[gdi++] = names[i];
    }
  }
  return good_dirs;
}
function printa(arr) {
  for (i=0;i<arr.length;i++) {
    print(arr[i]);
  }
}
